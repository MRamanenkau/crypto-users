version: '3.8'

services:
  nestjs-app:
    build: .
    container_name: nestjs-dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=nestjs
      - DATABASE_PASSWORD=password123
      - DATABASE_NAME=nestjs_db
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - nestjs-network
    stdin_open: true
    tty: true

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: nestjs
      POSTGRES_PASSWORD: password123
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nestjs -d nestjs_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - nestjs-network

volumes:
  postgres_data:
    driver: local

networks:
  nestjs-network:
    driver: bridge